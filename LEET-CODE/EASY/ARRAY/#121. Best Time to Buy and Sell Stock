Say you have an array for which the ith element is the price of a given stock on day i.

If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.

Note that you cannot sell a stock before you buy one.

SOLUTION : 
VIDEO LINK : https://www.youtube.com/watch?v=eMSfBgbiEjk

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int maxPro= 0 ;
        int minPrice = INT_MAX;
        for(int i =0; i<prices.size();i++){
            minPrice = min(minPrice, prices[i]);
            maxPro = max(maxPro, prices[i]-minPrice);
        }
       return maxPro; 
    }
};

Runtime: 12 ms, faster than 56.35% of C++ online submissions for Best Time to Buy and Sell Stock.
Memory Usage: 13.4 MB, less than 39.28% of C++ online submissions for Best Time to Buy and Sell Stock.
